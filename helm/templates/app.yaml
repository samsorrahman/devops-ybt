apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: {{ .Values.namespace }}
data:
  PORT: "3000"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ybt-app
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ybt-app
  template:
    metadata:
      labels:
        app: ybt-app
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
      containers:
        - name: app
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
          env:
            - name: MONGO_URI
              valueFrom:
                configMapKeyRef:
                  name: mongo-config
                  key: mongo-uri
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: PORT
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 20
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          resources:
            requests:
              cpu: {{ .Values.resources.app.requests.cpu | quote }}
              memory: {{ .Values.resources.app.requests.memory | quote }}
            limits:
              cpu: {{ .Values.resources.app.limits.cpu | quote }}
              memory: {{ .Values.resources.app.limits.memory | quote }}
---
apiVersion: v1
kind: Service
metadata:
  name: ybt-app
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: ybt-app
  ports:
    - port: 80
      targetPort: 3000
      protocol: TCP
  type: ClusterIP
---
apiVersion: batch/v1
kind: Job
metadata:
  name: seed-data
  namespace: {{ .Values.namespace }}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
spec:
  template:
    spec:
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
      containers:
        - name: seed
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/nodejs/bin/node"]
          args: ["seed.js"]
          env:
            - name: MONGO_URI
              valueFrom:
                configMapKeyRef:
                  name: mongo-config
                  key: mongo-uri
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
